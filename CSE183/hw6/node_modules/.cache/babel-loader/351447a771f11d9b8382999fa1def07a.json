{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\dutra\\\\Desktop\\\\zadutra\\\\CS101\\\\CSE183\\\\hw6\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport emails from './data/emails.json';\n/**\n * Simple component with no state.\n *\n * See the basic-react from lecture 11 for an example of adding and\n * reacting to changes in state and lecture 16 for details on Material-UI\n *\n * @return {object} JSX\n */\n\nfunction App() {\n  _s();\n\n  const [text, setText] = React.useState('One');\n\n  const changetext = () => {\n    setText(text == 'One' ? 'Two' : 'One');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TextContext.Provider, {\n      value: {\n        text,\n        changeText\n      },\n      children: /*#__PURE__*/_jsxDEV(ButtonBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"UBXxYXMWHY9Smzco45IRUOrkAps=\");\n\n_c = App;\n\nfunction ButtonBar() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TextButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = ButtonBar;\n\nfunction TextButton() {\n  return /*#__PURE__*/_jsxDEV(TextContext.Consumer, {\n    children: ({\n      text,\n      changeText\n    }) => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: changeText,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = TextButton;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ButtonBar\");\n$RefreshReg$(_c3, \"TextButton\");","map":{"version":3,"sources":["C:/Users/dutra/Desktop/zadutra/CS101/CSE183/hw6/src/App.js"],"names":["React","emails","App","text","setText","useState","changetext","changeText","ButtonBar","TextButton"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,KAAK,CAACK,QAAN,CAAe,KAAf,CAAxB;;AACA,QAAMC,UAAU,GAAG,MAAM;AACvBF,IAAAA,OAAO,CAACD,IAAI,IAAI,KAAR,GAAgB,KAAhB,GAAwB,KAAzB,CAAP;AACD,GAFD;;AAGA,sBACE;AAAA,2BACE,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAI;AAACA,QAAAA,IAAD;AAAOI,QAAAA;AAAP,OAA/B;AAAA,6BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAZQL,G;;KAAAA,G;;AAcT,SAASM,SAAT,GAAqB;AACnB,sBACE;AAAA,4BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;MARQA,S;;AAUT,SAASC,UAAT,GAAsB;AACpB,sBACE,QAAC,WAAD,CAAa,QAAb;AAAA,cACG,CAAC;AAACN,MAAAA,IAAD;AAAOI,MAAAA;AAAP,KAAD,kBACC;AAAQ,MAAA,OAAO,EAAEA,UAAjB;AAAA,gBAA8BJ;AAA9B;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;MARQM,U;AAST,eAAeP,GAAf","sourcesContent":["import React from 'react';\nimport emails from './data/emails.json';\n\n/**\n * Simple component with no state.\n *\n * See the basic-react from lecture 11 for an example of adding and\n * reacting to changes in state and lecture 16 for details on Material-UI\n *\n * @return {object} JSX\n */\nfunction App() {\n  const [text, setText] = React.useState('One');\n  const changetext = () => {\n    setText(text == 'One' ? 'Two' : 'One');\n  };\n  return (\n    <div>\n      <TextContext.Provider value = {{text, changeText}}>\n        <ButtonBar/>\n      </TextContext.Provider>\n    </div>\n  );\n}\n\nfunction ButtonBar() {\n  return(\n    <div>\n      <TextButton/>\n      <TextButton/>\n      <TextButton/>\n    </div>\n  );\n}\n\nfunction TextButton() {\n  return(\n    <TextContext.Consumer>\n      {({text, changeText}) => (\n        <button onClick={changeText}>{text}</button>\n      )}\n    </TextContext.Consumer>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}