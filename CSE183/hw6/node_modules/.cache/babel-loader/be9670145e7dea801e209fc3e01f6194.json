{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\dutra\\\\Desktop\\\\zadutra\\\\CS101\\\\CSE183\\\\hw6\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Content from './Content';\nimport ButtonBar from './ButtonBar';\nimport TextContext from './TextContext';\n/**\n * Simple component with no state.\n *\n * See the basic-react from lecture 11 for an example of adding and\n * reacting to changes in state and lecture 16 for details on Material-UI\n *\n * @return {object} JSX\n */\n\n/**\n * @return {object}\n */\n\nfunction App() {\n  _s();\n\n  const [text, setText] = React.useState('One');\n\n  const changeText = () => {\n    setText(text == 'One' ? 'Two' : 'One');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TextContext.Provider, {\n      value: {\n        text,\n        changeText\n      },\n      children: [/*#__PURE__*/_jsxDEV(ButtonBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Content, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"UBXxYXMWHY9Smzco45IRUOrkAps=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/dutra/Desktop/zadutra/CS101/CSE183/hw6/src/App.js"],"names":["React","Content","ButtonBar","TextContext","App","text","setText","useState","changeText"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,KAAK,CAACO,QAAN,CAAe,KAAf,CAAxB;;AACA,QAAMC,UAAU,GAAG,MAAM;AACvBF,IAAAA,OAAO,CAACD,IAAI,IAAI,KAAR,GAAgB,KAAhB,GAAwB,KAAzB,CAAP;AACD,GAFD;;AAGA,sBACE;AAAA,2BACE,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAI;AAACA,QAAAA,IAAD;AAAOG,QAAAA;AAAP,OAA/B;AAAA,8BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAbQJ,G;;KAAAA,G;AAeT,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport Content from './Content';\nimport ButtonBar from './ButtonBar';\nimport TextContext from './TextContext';\n/**\n * Simple component with no state.\n *\n * See the basic-react from lecture 11 for an example of adding and\n * reacting to changes in state and lecture 16 for details on Material-UI\n *\n * @return {object} JSX\n */\n\n/**\n * @return {object}\n */\nfunction App() {\n  const [text, setText] = React.useState('One');\n  const changeText = () => {\n    setText(text == 'One' ? 'Two' : 'One');\n  };\n  return (\n    <div>\n      <TextContext.Provider value = {{text, changeText}}>\n        <ButtonBar/>\n        <Content/>\n      </TextContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}