openapi: '3.0.3'

info:
  title: CSE183 Secure Books Example
  version: 0.1.0

servers:
  - url: http://localhost:3010

paths:
  /v0/books:
    get:
      description: Returns all books
      responses:
        401:
          description: Unauthorised
        200:
          description: Books Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Books'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedError'

    post:
      description: Creates a new book
      requestBody:
        description: Application to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        201:
          description: Application response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        400:
          description: Invalid ISBN
        409:
          description: Conflict. Requested ISBN in use.
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedError'

  /v0/books/{isbn}:
    get:
      description: Returns a single book
      parameters:
      - name: isbn
        in: path
        description: ISBN of the book
        required: true
        schema:
          $ref: '#/components/schemas/ISBN'
      responses:
        200:
          description: Book found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        400:
          description: Invalid ISBN
        404:
          description: Book not found
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedError'
                
components:
  schemas:
    UnexpectedError:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

    Books:
      type: array
      items:
        $ref: '#/components/schemas/Book'
        
    ISBN:
      type: string
      pattern: '^(?:ISBN(?:-10)?:?●)?(?=[0-9X]{10}$|(?=(?:[0-9]+[-●]){3})[-●0-9X]{13}$)[0-9]{1,5}[-●]?[0-9]+[-●]?[0-9]+[-●]?[0-9X]$|^(?:ISBN(?:-13)?:?●)?(?=[0-9]{13}$|(?=(?:[0-9]+[-●]){4})[-●0-9]{17}$)97[89][-●]?[0-9]{1,5}[-●]?[0-9]+[-●]?[0-9]+[-●]?[0-9]$'
        
    Book:
      type: object
      properties:
        isbn:
          $ref: '#/components/schemas/ISBN'
        title:
          type: string
        author:
          type: string
        publisher:
          type: string
      required:
        - title
        - author 
        - isbn 
        - publisher

  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes

security:
  - bearerAuth: []         # use the same name as above