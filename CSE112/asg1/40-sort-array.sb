;;File: 40-sort-array.sb
;;   1: # $Id: 40-sort-array.sb,v 1.7 2019-11-26 14:08:39-08 - - $
;;   2: #
;;   3: # sort numbers
;;   4: #
;;   5: # Input is a sequence of numbers ending with end of file.
;;   6: # User is assumed to have not more than 100 numbers.
;;   7: # Note that nan != nan, other was x = x for all x that is not nan.
;;   8: #
;;   9:         let size = 100
;;  10:         dim a[size]
;;  11:         let max = 0
;;  12: read:   input x
;;  13:         if eof != 0 goto eof
;;  14:         if x != x goto error
;;  15:         let a[max] = x
;;  16:         let max = max + 1
;;  17:         if max < size goto read
;;  18: eof:
;;  19:         print ""
;;  20:         print "unsorted"
;;  21:         let i = 0
;;  22: prtlp:  print "a[", i, "]=", a[i]
;;  23:         let i = i + 1
;;  24:         if i < max goto prtlp
;;  25:         if i < 1 goto sorted
;;  26: 
;;  27:         let i = max - 1
;;  28: outer:  let j = 0 
;;  29: inner:  if a[j] <= a[j + 1] goto noswap
;;  30:         let t = a[j]
;;  31:         let a[j] = a[j+1]
;;  32:         let a[j+1]=t
;;  33: noswap: let j = j + 1
;;  34:         if j <= i - 1 goto inner
;;  35:         let i = i - 1
;;  36:         if i > 0 goto outer
;;  37: 
;;  38: sorted: print ""
;;  39:         print "sorted"
;;  40:         let i = 0
;;  41: sortlp: print "a[", i, "]=", a[i]
;;  42:         let i = i + 1
;;  43:         if i < max goto sortlp
;;  44:         goto stop
;;  45: error:  print "Invalid input"
;;  46: stop:
(
(    1          )
(    2          )
(    3          )
(    4          )
(    5          )
(    6          )
(    7          )
(    8          )
(    9          (let size 100))
(   10          (dim (asub a size)))
(   11          (let max 0))
(   12 read     (input x))
(   13          (if (!= eof 0) eof))
(   14          (if (!= x x) error))
(   15          (let (asub a max) x))
(   16          (let max (+ max 1)))
(   17          (if (< max size) read))
(   18 eof      )
(   19          (print ""))
(   20          (print "unsorted"))
(   21          (let i 0))
(   22 prtlp    (print "a[" i "]=" (asub a i)))
(   23          (let i (+ i 1)))
(   24          (if (< i max) prtlp))
(   25          (if (< i 1) sorted))
(   26          )
(   27          (let i (- max 1)))
(   28 outer    (let j 0))
(   29 inner    (if (<= (asub a j) (asub a (+ j 1))) noswap))
(   30          (let t (asub a j)))
(   31          (let (asub a j) (asub a (+ j 1))))
(   32          (let (asub a (+ j 1)) t))
(   33 noswap   (let j (+ j 1)))
(   34          (if (<= j (- i 1)) inner))
(   35          (let i (- i 1)))
(   36          (if (> i 0) outer))
(   37          )
(   38 sorted   (print ""))
(   39          (print "sorted"))
(   40          (let i 0))
(   41 sortlp   (print "a[" i "]=" (asub a i)))
(   42          (let i (+ i 1)))
(   43          (if (< i max) sortlp))
(   44          (goto stop))
(   45 error    (print "Invalid input"))
(   46 stop     )
)
